apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

Properties properties = new Properties()
def localFile = project.rootProject.file("local.properties")
if (localFile != null && localFile.exists()) {
    properties.load(localFile.newDataInputStream())
}
def projectFile = project.file("project.properties")
if (projectFile != null && projectFile.exists()) {
    properties.load(projectFile.newDataInputStream())
}

def projectGitUrl = properties.getProperty("gitUrl")
def projectSiteUrl = properties.getProperty("website")
def projectVersion = properties.getProperty("publishVersion")
def projectGroupId = properties.getProperty("groupId")
def projectUserOrg = properties.getProperty("userOrg")
def projectEmail = properties.getProperty("email")
def projectDesc = properties.getProperty("desc")
def projectName = properties.getProperty("name")

group = projectGroupId
version = projectVersion
install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging "aar"
                name projectName
                groupId projectGroupId
                artifactId projectName
                url projectSiteUrl
                description projectDesc
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id projectUserOrg
                        name projectUserOrg
                        email projectEmail
                    }
                }
                scm {
                    connection projectGitUrl
                    developerConnection projectGitUrl
                    url projectSiteUrl
                }
            }
        }
    }
}

if (project.hasProperty("kotlin")) {
    // Disable creating javaDocs
    tasks.withType(Javadoc) {
        enabled = false
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    getArchiveClassifier().set('sources')
}
task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    getArchiveClassifier().set('javadoc')
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

javadoc {
    options {
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        version projectVersion
        links "http://docs.oracle.com/javase/7/docs/api"
        title projectName
    }
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = projectName
        websiteUrl = projectSiteUrl
        vcsUrl = projectGitUrl
        licenses = ["Apache-2.0"]
        publish = true // 是否是公开项目。

        version {
            name = projectVersion
            desc = projectDesc
            released = new Date()
            vcsTag = 'v' + projectVersion
            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']
        }
    }
}